<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.2</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>name.saak</groupId>
	<artifactId>empire</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<name>Empire Builder</name>
	<description>Multiplayer Game for Empire Builder / Eurorails ...</description>

	<licenses>
		<license />
	</licenses>

	<developers>
		<developer>
			<name>Wilfried Saak</name>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/ingraban/empire.git</connection>
		<developerConnection>scm:git:https://github.com/ingraban/empire.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<java.version>21</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Datenbanken -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- required due to modularization of Java 9 -->

		<!-- JAXB API only -->
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
		</dependency>

		<!-- JAXB Implementation -->
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- 
				<plugin>
					<groupId>com.github.akman</groupId>
					<artifactId>jpackage-maven-plugin</artifactId>
					<version>0.1.5</version>
					<configuration>
			                Specifies the JDK home path which provides the tool needed.
			                If not specified the jpackage tool executable will be find in
			                the following order:
			              
			                  - user specified JDK home directory by toolchains-plugin
			                  - JDK home directory specified by system variable JAVA_HOME
			                  - system path specified by system variable PATH
						<toolhome>$‍{env.JPACKAGE_HOME}</toolhome>
			            -->

				<!--
			                Specifies the location in which generated output files are placed.
			                Default value: $‍{project.build.directory}/jpackage
						<dest>$‍{project.build.directory}/jpackage</dest>
			            -->

				<!--
							Specifies the name of subdirectory relative to
							the destination directory in which files of generated
							application image are placed.
							<name>Empire</name>
							-->

				<!--
							Specifies version of the application and/or package.
							<appversion>1.0</appversion>
							-->

				<!--
							Specifies copyright for the application.
							<copyright>Copyright Wilfried Saak</copyright>
							-->

				<!--
                Specifies description of the application.
				<description>Empire Builder Board Game App</description>
				-->

				<!--
                Specifies vendor of the application.
				<vendor>Wilfried Saak</vendor>
				-->

				<!--
                Specifies the location of the icon of the application package.
				<icon>week.png</icon>
				<input>config/jpackage</input>
				<mainjar>empire-0.0.1-SNAPSHOT.jar</mainjar>
				<mainclass>name.saak.empire.EmpireBuilderApplication</mainclass>
				-->

				<!--
                Specifies the module path. The path where the jlink tool
                discovers observable modules: modular JAR files, JMOD files,
                exploded modules. If this option is not specified, then
                the default module path is $ JAVA_HOME/jmods. This directory
                contains the java.base module and the other standard and
                JDK modules. If this option is specified but the java.base
                module cannot be resolved from it, then the jlink command
                appends $ JAVA_HOME/jmods to the module path.
                Pass on &dash;-modulepath option to jlink.
              
                pathelements - passed to jlink as is
                filesets - sets of files (without directories)
                dirsets - sets of directories (without files)
                dependencysets - sets of dependencies with specified includes
                                 and excludes patterns (glob: or regex:)
                                 for file names and regex patterns only
                                 for module names, and excludes
                                 for automatic modules
								 <modulepath>
									<dependencysets>
										<dependencyset>
											<includeoutput>true</includeoutput>
											<excludeautomatic>true</excludeautomatic>
										</dependencyset>
									</dependencysets>
								</modulepath>
								-->

				<!--
									Specifies the modules names (names of root modules) to add to
                the runtime image. Their transitive dependencies will add too.
                This module list, along with the main module (if specified)
                will be passed to jlink as the &dash;-add-module argument.
                If not specified, either just the main module (if module
                is specified), or the default set of modules (if mainjar
                is specified) are used.
						<addmodules>
							<addmodule>appModuleName</addmodule>
						</addmodules>
              -->

				<!--
                Specifies the main module (and optionally main class) of
                the application. This module must be located on the module path.
                When this option is specified, the main module will be linked
                in the Java runtime image.
                Either module or main-jar option can be specified
                but not both.
						<module>name.saak.empire.EmpireBuilderApplication</module>
              -->

				<!--
                Specifies the command line arguments to pass to the main class
                if no command line arguments are given to the launcher.
						<arguments>- -opt</arguments>
              -->

				<!--
                Specifies the options to pass to the Java runtime.
						<javaoptions>-Dfile.encoding=UTF-8 -Xms256m -Xmx512m</javaoptions>
              -->

				<!--
                Specifies options are added to, or used to overwrite,
                the original command line options to build additional
                alternative launchers.
						<addlaunchers>
							<addlauncher>
								<name>appname-cli</name>
								<module>AppModuleName/appClassName</module>
								<arguments>- -help</arguments>
								<javaoptions>-Xms256m -Xmx512m</javaoptions>
								<appversion>1.0</appversion>
								<icon>
									$‍{project.basedir}/config/jpackage/resources/appname-cli.ico</icon>
								<winconsole>true</winconsole>
							</addlauncher>
						</addlaunchers>
              -->

				<!--
                Specifies the location of a license file.
						<licensefile>$‍{project.basedir}/config/jpackage/LICENSE</licensefile>
              -->

				<!--
                Specifies the location of a resources directory that override
                jpackage resources. Icons, template files, and other resources
                of jpackage can be overridden by adding replacement resources
                to this directory.
						<resourcedir>$‍{project.basedir}/config/jpackage/resources</resourcedir>
					</configuration>
				</plugin>
				-->
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
					<classifier>exec</classifier>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dendencies-jpackage</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<outputDirectory>${project.build.directory}/jpackage</outputDirectory>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare-jpackage</id>
						<phase>package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/jpackage</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/jpackage</directory>
								</resource>
								<resource>
									<directory>${project.build.directory}</directory>
									<includes>
										<include>empire*.jar</include>
									</includes>
									<excludes>
										<exclude>empire*-exec.jar</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.akman</groupId>
				<artifactId>jpackage-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>jpackage-installer</id>
						<phase>package</phase>
						<goals>
							<goal>jpackage</goal>
						</goals>
						<configuration>
							<dest>target</dest>
							<name>Empire</name>
							<appversion>1.0</appversion>
							<copyright>Copyright Wilfried Saak</copyright>
							<description>Empire Builder Board Game App</description>
							<vendor>Wilfried Saak</vendor>
							<icon>target/jpackage/Empire.icns</icon>
							<input>target/jpackage</input>
							<mainjar>empire-${version}.jar</mainjar>
							<mainclass>name.saak.empire.EmpireBuilderApplication</mainclass>
							<resourcedir>jpackage</resourcedir>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>